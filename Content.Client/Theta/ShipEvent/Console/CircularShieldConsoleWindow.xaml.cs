using Content.Client.Message;
using Content.Shared.Theta.ShipEvent.UI;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Map;

namespace Content.Client.Theta.ShipEvent.Console;

[GenerateTypedNameReferences]
public sealed partial class CircularShieldConsoleWindow : DefaultWindow
{
    public event Action? OnEnableButtonPressed;

    public event Action<Angle?, Angle?, int?>? OnShieldParametersChanged;

    public CircularShieldConsoleWindow()
    {
        RobustXamlLoader.Load(this);

        ShieldEnableButton.OnPressed += _ => OnEnableButtonPressed?.Invoke();

        ShieldRadiusSlider.OnValueChanged += radius => OnShieldParametersChanged?.Invoke(null, null, (int) radius.Value);

        // Initialize the radar screen with default settings
        ShieldRadarScreen.ShowIFF = true;
        ShieldRadarScreen.RotateWithEntity = true;
    }

    public void UpdateState(ShieldConsoleBoundsUserInterfaceState shieldState)
    {
        var state = shieldState.Shield;

        ShieldPowerStatusLabel.SetMarkup(Loc.GetString(state.Powered ? "shipevent-shieldconsole-powered" : "shipevent-shieldconsole-nopower"));
        ShieldActiveStatusLabel.SetMarkup(Loc.GetString(state.Enabled ? "shipevent-shieldconsole-active" : "shipevent-shieldconsole-inactive"));

        // Format and display power draw information
        var powerDrawText = state.Enabled
            ? Loc.GetString("shipevent-shieldconsole-powerdraw", ("watts", state.PowerDraw))
            : Loc.GetString("shipevent-shieldconsole-powerdraw-inactive");
        ShieldPowerDrawLabel.SetMarkup(powerDrawText);

        ShieldRadiusSlider.SetValueWithoutEvent(state.Radius);
        ShieldRadiusSlider.MaxValue = state.MaxRadius;

        // Update the radar display with navigation state
        ShieldRadarScreen.UpdateState(shieldState.NavState);
    }

    public void SetConsole(EntityUid consoleEntity)
    {
        // Set the console entity for the radar display
        ShieldRadarScreen.SetConsole(consoleEntity);
    }
}
